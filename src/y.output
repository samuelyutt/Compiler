   0  $accept : program $end

   1  program : ID ';' vars_consts_ functions_ compound_statment END ID

   2  vars_consts_ : var_const vars_consts_
   3               |

   4  var_const : variable
   5            | varconstant

   6  variable : VAR idlist ':' scalar_type ';'
   7           | VAR idlist ':' arr_type ';'

   8  type : scalar_type
   9       | arr_type

  10  scalar_type : INTEGER
  11              | REAL
  12              | STRING
  13              | BOOLEAN

  14  arr_type : ARRAY INT TO INT OF type

  15  varconstant : VAR idlist ':' literal_constant ';'

  16  literal_constant : constant
  17                   | STR
  18                   | TRUE
  19                   | FALSE

  20  functions_ : function functions_
  21             |

  22  function : ID '(' formal_args_ ')' ':' scalar_type ';' compound_statment END ID
  23           | ID '(' formal_args_ ')' ';' compound_statment END ID

  24  constant : pos_constant
  25           | neg_constant

  26  pos_constant : INT
  27               | OCTINT
  28               | FLOAT
  29               | SCI

  30  neg_constant : neg pos_constant

  31  formal_args_ : formal_arg formal_args_
  32               |

  33  formal_arg : idlist ':' type

  34  idlist : ID ids_

  35  ids_ : ',' ID ids_
  36       |

  37  compound_statment : BGN vars_consts_ statements_ END

  38  statements_ : statement statements_
  39              |

  40  statement : PRINT expr ';'
  41            | READ var_ref ';'
  42            | compound_statment
  43            | condition
  44            | whileloop
  45            | forloop
  46            | expr ';'
  47            | rtrn ';'

  48  var_ref : ID arr_ref

  49  arr_ref : exprbs_

  50  exprbs_ : '[' expr ']' exprbs_
  51          |

  52  exprcs_ : expr exprcs
  53          |

  54  exprcs : ',' expr exprcs
  55         |

  56  expr : items
  57       | var_ref ASSIGN items

  58  items : '(' items ')'
  59        | items operator items
  60        | item

  61  item : var_ref
  62       | procedure
  63       | literal_constant

  64  operator : add
  65           | sub
  66           | mul
  67           | div
  68           | rel
  69           | log

  70  neg : '-'

  71  add : '+'

  72  sub : '-'

  73  mul : '*'

  74  div : '/'
  75      | MOD

  76  rel : '<'
  77      | LE
  78      | NE
  79      | GE
  80      | '>'
  81      | '='

  82  log : AND
  83      | OR
  84      | NOT

  85  condition : IF expr THEN statements_ ELSE statements_ END IF
  86            | IF expr THEN statements_ END IF

  87  whileloop : WHILE expr DO statements_ END DO

  88  forloop : FOR ID ASSIGN int_const TO int_const DO statements_ END DO

  89  int_const : pos_int
  90            | neg_int

  91  pos_int : INT
  92          | OCTINT

  93  neg_int : neg pos_int

  94  rtrn : RETURN expr

  95  procedure : ID '(' exprcs_ ')'

state 0
	$accept : . program $end  (0)

	ID  shift 1
	.  error

	program  goto 2


state 1
	program : ID . ';' vars_consts_ functions_ compound_statment END ID  (1)

	';'  shift 3
	.  error


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : ID ';' . vars_consts_ functions_ compound_statment END ID  (1)
	vars_consts_ : .  (3)

	VAR  shift 4
	ID  reduce 3
	BGN  reduce 3

	vars_consts_  goto 5
	var_const  goto 6
	variable  goto 7
	varconstant  goto 8


state 4
	variable : VAR . idlist ':' scalar_type ';'  (6)
	variable : VAR . idlist ':' arr_type ';'  (7)
	varconstant : VAR . idlist ':' literal_constant ';'  (15)

	ID  shift 9
	.  error

	idlist  goto 10


state 5
	program : ID ';' vars_consts_ . functions_ compound_statment END ID  (1)
	functions_ : .  (21)

	ID  shift 11
	BGN  reduce 21

	functions_  goto 12
	function  goto 13


state 6
	vars_consts_ : var_const . vars_consts_  (2)
	vars_consts_ : .  (3)

	VAR  shift 4
	ID  reduce 3
	INT  reduce 3
	OCTINT  reduce 3
	FLOAT  reduce 3
	SCI  reduce 3
	STR  reduce 3
	'('  reduce 3
	'-'  reduce 3
	BGN  reduce 3
	END  reduce 3
	FALSE  reduce 3
	FOR  reduce 3
	IF  reduce 3
	PRINT  reduce 3
	READ  reduce 3
	TRUE  reduce 3
	RETURN  reduce 3
	WHILE  reduce 3

	vars_consts_  goto 14
	var_const  goto 6
	variable  goto 7
	varconstant  goto 8


state 7
	var_const : variable .  (4)

	.  reduce 4


state 8
	var_const : varconstant .  (5)

	.  reduce 5


state 9
	idlist : ID . ids_  (34)
	ids_ : .  (36)

	','  shift 15
	':'  reduce 36

	ids_  goto 16


state 10
	variable : VAR idlist . ':' scalar_type ';'  (6)
	variable : VAR idlist . ':' arr_type ';'  (7)
	varconstant : VAR idlist . ':' literal_constant ';'  (15)

	':'  shift 17
	.  error


state 11
	function : ID . '(' formal_args_ ')' ':' scalar_type ';' compound_statment END ID  (22)
	function : ID . '(' formal_args_ ')' ';' compound_statment END ID  (23)

	'('  shift 18
	.  error


state 12
	program : ID ';' vars_consts_ functions_ . compound_statment END ID  (1)

	BGN  shift 19
	.  error

	compound_statment  goto 20


state 13
	functions_ : function . functions_  (20)
	functions_ : .  (21)

	ID  shift 11
	BGN  reduce 21

	functions_  goto 21
	function  goto 13


state 14
	vars_consts_ : var_const vars_consts_ .  (2)

	.  reduce 2


state 15
	ids_ : ',' . ID ids_  (35)

	ID  shift 22
	.  error


state 16
	idlist : ID ids_ .  (34)

	.  reduce 34


state 17
	variable : VAR idlist ':' . scalar_type ';'  (6)
	variable : VAR idlist ':' . arr_type ';'  (7)
	varconstant : VAR idlist ':' . literal_constant ';'  (15)

	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'-'  shift 28
	ARRAY  shift 29
	BOOLEAN  shift 30
	FALSE  shift 31
	INTEGER  shift 32
	REAL  shift 33
	STRING  shift 34
	TRUE  shift 35
	.  error

	scalar_type  goto 36
	arr_type  goto 37
	literal_constant  goto 38
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42


state 18
	function : ID '(' . formal_args_ ')' ':' scalar_type ';' compound_statment END ID  (22)
	function : ID '(' . formal_args_ ')' ';' compound_statment END ID  (23)
	formal_args_ : .  (32)

	ID  shift 9
	')'  reduce 32

	idlist  goto 43
	formal_args_  goto 44
	formal_arg  goto 45


state 19
	compound_statment : BGN . vars_consts_ statements_ END  (37)
	vars_consts_ : .  (3)

	VAR  shift 4
	ID  reduce 3
	INT  reduce 3
	OCTINT  reduce 3
	FLOAT  reduce 3
	SCI  reduce 3
	STR  reduce 3
	'('  reduce 3
	'-'  reduce 3
	BGN  reduce 3
	END  reduce 3
	FALSE  reduce 3
	FOR  reduce 3
	IF  reduce 3
	PRINT  reduce 3
	READ  reduce 3
	TRUE  reduce 3
	RETURN  reduce 3
	WHILE  reduce 3

	vars_consts_  goto 46
	var_const  goto 6
	variable  goto 7
	varconstant  goto 8


state 20
	program : ID ';' vars_consts_ functions_ compound_statment . END ID  (1)

	END  shift 47
	.  error


state 21
	functions_ : function functions_ .  (20)

	.  reduce 20


state 22
	ids_ : ',' ID . ids_  (35)
	ids_ : .  (36)

	','  shift 15
	':'  reduce 36

	ids_  goto 48


state 23
	pos_constant : INT .  (26)

	.  reduce 26


state 24
	pos_constant : OCTINT .  (27)

	.  reduce 27


state 25
	pos_constant : FLOAT .  (28)

	.  reduce 28


state 26
	pos_constant : SCI .  (29)

	.  reduce 29


state 27
	literal_constant : STR .  (17)

	.  reduce 17


state 28
	neg : '-' .  (70)

	.  reduce 70


state 29
	arr_type : ARRAY . INT TO INT OF type  (14)

	INT  shift 49
	.  error


state 30
	scalar_type : BOOLEAN .  (13)

	.  reduce 13


state 31
	literal_constant : FALSE .  (19)

	.  reduce 19


state 32
	scalar_type : INTEGER .  (10)

	.  reduce 10


state 33
	scalar_type : REAL .  (11)

	.  reduce 11


state 34
	scalar_type : STRING .  (12)

	.  reduce 12


state 35
	literal_constant : TRUE .  (18)

	.  reduce 18


state 36
	variable : VAR idlist ':' scalar_type . ';'  (6)

	';'  shift 50
	.  error


state 37
	variable : VAR idlist ':' arr_type . ';'  (7)

	';'  shift 51
	.  error


state 38
	varconstant : VAR idlist ':' literal_constant . ';'  (15)

	';'  shift 52
	.  error


state 39
	literal_constant : constant .  (16)

	.  reduce 16


state 40
	constant : pos_constant .  (24)

	.  reduce 24


state 41
	constant : neg_constant .  (25)

	.  reduce 25


state 42
	neg_constant : neg . pos_constant  (30)

	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	.  error

	pos_constant  goto 53


state 43
	formal_arg : idlist . ':' type  (33)

	':'  shift 54
	.  error


state 44
	function : ID '(' formal_args_ . ')' ':' scalar_type ';' compound_statment END ID  (22)
	function : ID '(' formal_args_ . ')' ';' compound_statment END ID  (23)

	')'  shift 55
	.  error


state 45
	formal_args_ : formal_arg . formal_args_  (31)
	formal_args_ : .  (32)

	ID  shift 9
	')'  reduce 32

	idlist  goto 43
	formal_args_  goto 56
	formal_arg  goto 45


state 46
	compound_statment : BGN vars_consts_ . statements_ END  (37)
	statements_ : .  (39)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	BGN  shift 19
	FALSE  shift 31
	FOR  shift 59
	IF  shift 60
	PRINT  shift 61
	READ  shift 62
	TRUE  shift 35
	RETURN  shift 63
	WHILE  shift 64
	END  reduce 39

	compound_statment  goto 65
	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	statements_  goto 67
	statement  goto 68
	expr  goto 69
	var_ref  goto 70
	condition  goto 71
	whileloop  goto 72
	forloop  goto 73
	rtrn  goto 74
	items  goto 75
	item  goto 76
	procedure  goto 77


state 47
	program : ID ';' vars_consts_ functions_ compound_statment END . ID  (1)

	ID  shift 78
	.  error


state 48
	ids_ : ',' ID ids_ .  (35)

	.  reduce 35


state 49
	arr_type : ARRAY INT . TO INT OF type  (14)

	TO  shift 79
	.  error


state 50
	variable : VAR idlist ':' scalar_type ';' .  (6)

	.  reduce 6


state 51
	variable : VAR idlist ':' arr_type ';' .  (7)

	.  reduce 7


state 52
	varconstant : VAR idlist ':' literal_constant ';' .  (15)

	.  reduce 15


state 53
	neg_constant : neg pos_constant .  (30)

	.  reduce 30


state 54
	formal_arg : idlist ':' . type  (33)

	ARRAY  shift 29
	BOOLEAN  shift 30
	INTEGER  shift 32
	REAL  shift 33
	STRING  shift 34
	.  error

	scalar_type  goto 80
	arr_type  goto 81
	type  goto 82


state 55
	function : ID '(' formal_args_ ')' . ':' scalar_type ';' compound_statment END ID  (22)
	function : ID '(' formal_args_ ')' . ';' compound_statment END ID  (23)

	';'  shift 83
	':'  shift 84
	.  error


state 56
	formal_args_ : formal_arg formal_args_ .  (31)

	.  reduce 31


state 57
	var_ref : ID . arr_ref  (48)
	procedure : ID . '(' exprcs_ ')'  (95)
	exprbs_ : .  (51)

	'('  shift 85
	'['  shift 86
	','  reduce 51
	';'  reduce 51
	')'  reduce 51
	']'  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	'*'  reduce 51
	'/'  reduce 51
	MOD  reduce 51
	ASSIGN  reduce 51
	'<'  reduce 51
	LE  reduce 51
	NE  reduce 51
	GE  reduce 51
	'>'  reduce 51
	'='  reduce 51
	AND  reduce 51
	OR  reduce 51
	NOT  reduce 51
	DO  reduce 51
	THEN  reduce 51

	arr_ref  goto 87
	exprbs_  goto 88


state 58
	items : '(' . items ')'  (58)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	var_ref  goto 89
	items  goto 90
	item  goto 76
	procedure  goto 77


state 59
	forloop : FOR . ID ASSIGN int_const TO int_const DO statements_ END DO  (88)

	ID  shift 91
	.  error


state 60
	condition : IF . expr THEN statements_ ELSE statements_ END IF  (85)
	condition : IF . expr THEN statements_ END IF  (86)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 92
	var_ref  goto 70
	items  goto 75
	item  goto 76
	procedure  goto 77


state 61
	statement : PRINT . expr ';'  (40)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 93
	var_ref  goto 70
	items  goto 75
	item  goto 76
	procedure  goto 77


state 62
	statement : READ . var_ref ';'  (41)

	ID  shift 94
	.  error

	var_ref  goto 95


state 63
	rtrn : RETURN . expr  (94)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 96
	var_ref  goto 70
	items  goto 75
	item  goto 76
	procedure  goto 77


state 64
	whileloop : WHILE . expr DO statements_ END DO  (87)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 97
	var_ref  goto 70
	items  goto 75
	item  goto 76
	procedure  goto 77


state 65
	statement : compound_statment .  (42)

	.  reduce 42


state 66
	item : literal_constant .  (63)

	.  reduce 63


state 67
	compound_statment : BGN vars_consts_ statements_ . END  (37)

	END  shift 98
	.  error


state 68
	statements_ : statement . statements_  (38)
	statements_ : .  (39)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	BGN  shift 19
	FALSE  shift 31
	FOR  shift 59
	IF  shift 60
	PRINT  shift 61
	READ  shift 62
	TRUE  shift 35
	RETURN  shift 63
	WHILE  shift 64
	ELSE  reduce 39
	END  reduce 39

	compound_statment  goto 65
	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	statements_  goto 99
	statement  goto 68
	expr  goto 69
	var_ref  goto 70
	condition  goto 71
	whileloop  goto 72
	forloop  goto 73
	rtrn  goto 74
	items  goto 75
	item  goto 76
	procedure  goto 77


state 69
	statement : expr . ';'  (46)

	';'  shift 100
	.  error


state 70
	expr : var_ref . ASSIGN items  (57)
	item : var_ref .  (61)

	ASSIGN  shift 101
	','  reduce 61
	';'  reduce 61
	')'  reduce 61
	']'  reduce 61
	'+'  reduce 61
	'-'  reduce 61
	'*'  reduce 61
	'/'  reduce 61
	MOD  reduce 61
	'<'  reduce 61
	LE  reduce 61
	NE  reduce 61
	GE  reduce 61
	'>'  reduce 61
	'='  reduce 61
	AND  reduce 61
	OR  reduce 61
	NOT  reduce 61
	DO  reduce 61
	THEN  reduce 61


state 71
	statement : condition .  (43)

	.  reduce 43


state 72
	statement : whileloop .  (44)

	.  reduce 44


state 73
	statement : forloop .  (45)

	.  reduce 45


state 74
	statement : rtrn . ';'  (47)

	';'  shift 102
	.  error


state 75
	expr : items .  (56)
	items : items . operator items  (59)

	'+'  shift 103
	'-'  shift 104
	'*'  shift 105
	'/'  shift 106
	MOD  shift 107
	'<'  shift 108
	LE  shift 109
	NE  shift 110
	GE  shift 111
	'>'  shift 112
	'='  shift 113
	AND  shift 114
	OR  shift 115
	NOT  shift 116
	','  reduce 56
	';'  reduce 56
	')'  reduce 56
	']'  reduce 56
	DO  reduce 56
	THEN  reduce 56

	operator  goto 117
	add  goto 118
	sub  goto 119
	mul  goto 120
	div  goto 121
	rel  goto 122
	log  goto 123


state 76
	items : item .  (60)

	.  reduce 60


state 77
	item : procedure .  (62)

	.  reduce 62


state 78
	program : ID ';' vars_consts_ functions_ compound_statment END ID .  (1)

	.  reduce 1


state 79
	arr_type : ARRAY INT TO . INT OF type  (14)

	INT  shift 124
	.  error


state 80
	type : scalar_type .  (8)

	.  reduce 8


state 81
	type : arr_type .  (9)

	.  reduce 9


state 82
	formal_arg : idlist ':' type .  (33)

	.  reduce 33


state 83
	function : ID '(' formal_args_ ')' ';' . compound_statment END ID  (23)

	BGN  shift 19
	.  error

	compound_statment  goto 125


state 84
	function : ID '(' formal_args_ ')' ':' . scalar_type ';' compound_statment END ID  (22)

	BOOLEAN  shift 30
	INTEGER  shift 32
	REAL  shift 33
	STRING  shift 34
	.  error

	scalar_type  goto 126


state 85
	procedure : ID '(' . exprcs_ ')'  (95)
	exprcs_ : .  (53)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	')'  reduce 53

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 127
	var_ref  goto 70
	exprcs_  goto 128
	items  goto 75
	item  goto 76
	procedure  goto 77


state 86
	exprbs_ : '[' . expr ']' exprbs_  (50)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 129
	var_ref  goto 70
	items  goto 75
	item  goto 76
	procedure  goto 77


state 87
	var_ref : ID arr_ref .  (48)

	.  reduce 48


state 88
	arr_ref : exprbs_ .  (49)

	.  reduce 49


state 89
	item : var_ref .  (61)

	.  reduce 61


state 90
	items : '(' items . ')'  (58)
	items : items . operator items  (59)

	')'  shift 130
	'+'  shift 103
	'-'  shift 104
	'*'  shift 105
	'/'  shift 106
	MOD  shift 107
	'<'  shift 108
	LE  shift 109
	NE  shift 110
	GE  shift 111
	'>'  shift 112
	'='  shift 113
	AND  shift 114
	OR  shift 115
	NOT  shift 116
	.  error

	operator  goto 117
	add  goto 118
	sub  goto 119
	mul  goto 120
	div  goto 121
	rel  goto 122
	log  goto 123


state 91
	forloop : FOR ID . ASSIGN int_const TO int_const DO statements_ END DO  (88)

	ASSIGN  shift 131
	.  error


state 92
	condition : IF expr . THEN statements_ ELSE statements_ END IF  (85)
	condition : IF expr . THEN statements_ END IF  (86)

	THEN  shift 132
	.  error


state 93
	statement : PRINT expr . ';'  (40)

	';'  shift 133
	.  error


state 94
	var_ref : ID . arr_ref  (48)
	exprbs_ : .  (51)

	'['  shift 86
	';'  reduce 51

	arr_ref  goto 87
	exprbs_  goto 88


state 95
	statement : READ var_ref . ';'  (41)

	';'  shift 134
	.  error


state 96
	rtrn : RETURN expr .  (94)

	.  reduce 94


state 97
	whileloop : WHILE expr . DO statements_ END DO  (87)

	DO  shift 135
	.  error


state 98
	compound_statment : BGN vars_consts_ statements_ END .  (37)

	.  reduce 37


state 99
	statements_ : statement statements_ .  (38)

	.  reduce 38


state 100
	statement : expr ';' .  (46)

	.  reduce 46


state 101
	expr : var_ref ASSIGN . items  (57)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	var_ref  goto 89
	items  goto 136
	item  goto 76
	procedure  goto 77


state 102
	statement : rtrn ';' .  (47)

	.  reduce 47


state 103
	add : '+' .  (71)

	.  reduce 71


state 104
	sub : '-' .  (72)

	.  reduce 72


state 105
	mul : '*' .  (73)

	.  reduce 73


state 106
	div : '/' .  (74)

	.  reduce 74


state 107
	div : MOD .  (75)

	.  reduce 75


state 108
	rel : '<' .  (76)

	.  reduce 76


state 109
	rel : LE .  (77)

	.  reduce 77


state 110
	rel : NE .  (78)

	.  reduce 78


state 111
	rel : GE .  (79)

	.  reduce 79


state 112
	rel : '>' .  (80)

	.  reduce 80


state 113
	rel : '=' .  (81)

	.  reduce 81


state 114
	log : AND .  (82)

	.  reduce 82


state 115
	log : OR .  (83)

	.  reduce 83


state 116
	log : NOT .  (84)

	.  reduce 84


state 117
	items : items operator . items  (59)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	var_ref  goto 89
	items  goto 137
	item  goto 76
	procedure  goto 77


state 118
	operator : add .  (64)

	.  reduce 64


state 119
	operator : sub .  (65)

	.  reduce 65


state 120
	operator : mul .  (66)

	.  reduce 66


state 121
	operator : div .  (67)

	.  reduce 67


state 122
	operator : rel .  (68)

	.  reduce 68


state 123
	operator : log .  (69)

	.  reduce 69


state 124
	arr_type : ARRAY INT TO INT . OF type  (14)

	OF  shift 138
	.  error


state 125
	function : ID '(' formal_args_ ')' ';' compound_statment . END ID  (23)

	END  shift 139
	.  error


state 126
	function : ID '(' formal_args_ ')' ':' scalar_type . ';' compound_statment END ID  (22)

	';'  shift 140
	.  error


state 127
	exprcs_ : expr . exprcs  (52)
	exprcs : .  (55)

	','  shift 141
	')'  reduce 55

	exprcs  goto 142


state 128
	procedure : ID '(' exprcs_ . ')'  (95)

	')'  shift 143
	.  error


state 129
	exprbs_ : '[' expr . ']' exprbs_  (50)

	']'  shift 144
	.  error


state 130
	items : '(' items ')' .  (58)

	.  reduce 58


state 131
	forloop : FOR ID ASSIGN . int_const TO int_const DO statements_ END DO  (88)

	INT  shift 145
	OCTINT  shift 146
	'-'  shift 28
	.  error

	neg  goto 147
	int_const  goto 148
	pos_int  goto 149
	neg_int  goto 150


state 132
	condition : IF expr THEN . statements_ ELSE statements_ END IF  (85)
	condition : IF expr THEN . statements_ END IF  (86)
	statements_ : .  (39)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	BGN  shift 19
	FALSE  shift 31
	FOR  shift 59
	IF  shift 60
	PRINT  shift 61
	READ  shift 62
	TRUE  shift 35
	RETURN  shift 63
	WHILE  shift 64
	ELSE  reduce 39
	END  reduce 39

	compound_statment  goto 65
	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	statements_  goto 151
	statement  goto 68
	expr  goto 69
	var_ref  goto 70
	condition  goto 71
	whileloop  goto 72
	forloop  goto 73
	rtrn  goto 74
	items  goto 75
	item  goto 76
	procedure  goto 77


state 133
	statement : PRINT expr ';' .  (40)

	.  reduce 40


state 134
	statement : READ var_ref ';' .  (41)

	.  reduce 41


state 135
	whileloop : WHILE expr DO . statements_ END DO  (87)
	statements_ : .  (39)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	BGN  shift 19
	FALSE  shift 31
	FOR  shift 59
	IF  shift 60
	PRINT  shift 61
	READ  shift 62
	TRUE  shift 35
	RETURN  shift 63
	WHILE  shift 64
	END  reduce 39

	compound_statment  goto 65
	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	statements_  goto 152
	statement  goto 68
	expr  goto 69
	var_ref  goto 70
	condition  goto 71
	whileloop  goto 72
	forloop  goto 73
	rtrn  goto 74
	items  goto 75
	item  goto 76
	procedure  goto 77


state 136
	expr : var_ref ASSIGN items .  (57)
	items : items . operator items  (59)

	'+'  shift 103
	'-'  shift 104
	'*'  shift 105
	'/'  shift 106
	MOD  shift 107
	'<'  shift 108
	LE  shift 109
	NE  shift 110
	GE  shift 111
	'>'  shift 112
	'='  shift 113
	AND  shift 114
	OR  shift 115
	NOT  shift 116
	','  reduce 57
	';'  reduce 57
	')'  reduce 57
	']'  reduce 57
	DO  reduce 57
	THEN  reduce 57

	operator  goto 117
	add  goto 118
	sub  goto 119
	mul  goto 120
	div  goto 121
	rel  goto 122
	log  goto 123


137: shift/reduce conflict (shift 103, reduce 59) on '+'
137: shift/reduce conflict (shift 104, reduce 59) on '-'
137: shift/reduce conflict (shift 105, reduce 59) on '*'
137: shift/reduce conflict (shift 106, reduce 59) on '/'
137: shift/reduce conflict (shift 107, reduce 59) on MOD
137: shift/reduce conflict (shift 108, reduce 59) on '<'
137: shift/reduce conflict (shift 109, reduce 59) on LE
137: shift/reduce conflict (shift 110, reduce 59) on NE
137: shift/reduce conflict (shift 111, reduce 59) on GE
137: shift/reduce conflict (shift 112, reduce 59) on '>'
137: shift/reduce conflict (shift 113, reduce 59) on '='
137: shift/reduce conflict (shift 114, reduce 59) on AND
137: shift/reduce conflict (shift 115, reduce 59) on OR
137: shift/reduce conflict (shift 116, reduce 59) on NOT
state 137
	items : items . operator items  (59)
	items : items operator items .  (59)

	'+'  shift 103
	'-'  shift 104
	'*'  shift 105
	'/'  shift 106
	MOD  shift 107
	'<'  shift 108
	LE  shift 109
	NE  shift 110
	GE  shift 111
	'>'  shift 112
	'='  shift 113
	AND  shift 114
	OR  shift 115
	NOT  shift 116
	','  reduce 59
	';'  reduce 59
	')'  reduce 59
	']'  reduce 59
	DO  reduce 59
	THEN  reduce 59

	operator  goto 117
	add  goto 118
	sub  goto 119
	mul  goto 120
	div  goto 121
	rel  goto 122
	log  goto 123


state 138
	arr_type : ARRAY INT TO INT OF . type  (14)

	ARRAY  shift 29
	BOOLEAN  shift 30
	INTEGER  shift 32
	REAL  shift 33
	STRING  shift 34
	.  error

	scalar_type  goto 80
	arr_type  goto 81
	type  goto 153


state 139
	function : ID '(' formal_args_ ')' ';' compound_statment END . ID  (23)

	ID  shift 154
	.  error


state 140
	function : ID '(' formal_args_ ')' ':' scalar_type ';' . compound_statment END ID  (22)

	BGN  shift 19
	.  error

	compound_statment  goto 155


state 141
	exprcs : ',' . expr exprcs  (54)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	FALSE  shift 31
	TRUE  shift 35
	.  error

	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	expr  goto 156
	var_ref  goto 70
	items  goto 75
	item  goto 76
	procedure  goto 77


state 142
	exprcs_ : expr exprcs .  (52)

	.  reduce 52


state 143
	procedure : ID '(' exprcs_ ')' .  (95)

	.  reduce 95


state 144
	exprbs_ : '[' expr ']' . exprbs_  (50)
	exprbs_ : .  (51)

	'['  shift 86
	','  reduce 51
	';'  reduce 51
	')'  reduce 51
	']'  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	'*'  reduce 51
	'/'  reduce 51
	MOD  reduce 51
	ASSIGN  reduce 51
	'<'  reduce 51
	LE  reduce 51
	NE  reduce 51
	GE  reduce 51
	'>'  reduce 51
	'='  reduce 51
	AND  reduce 51
	OR  reduce 51
	NOT  reduce 51
	DO  reduce 51
	THEN  reduce 51

	exprbs_  goto 157


state 145
	pos_int : INT .  (91)

	.  reduce 91


state 146
	pos_int : OCTINT .  (92)

	.  reduce 92


state 147
	neg_int : neg . pos_int  (93)

	INT  shift 145
	OCTINT  shift 146
	.  error

	pos_int  goto 158


state 148
	forloop : FOR ID ASSIGN int_const . TO int_const DO statements_ END DO  (88)

	TO  shift 159
	.  error


state 149
	int_const : pos_int .  (89)

	.  reduce 89


state 150
	int_const : neg_int .  (90)

	.  reduce 90


state 151
	condition : IF expr THEN statements_ . ELSE statements_ END IF  (85)
	condition : IF expr THEN statements_ . END IF  (86)

	ELSE  shift 160
	END  shift 161
	.  error


state 152
	whileloop : WHILE expr DO statements_ . END DO  (87)

	END  shift 162
	.  error


state 153
	arr_type : ARRAY INT TO INT OF type .  (14)

	.  reduce 14


state 154
	function : ID '(' formal_args_ ')' ';' compound_statment END ID .  (23)

	.  reduce 23


state 155
	function : ID '(' formal_args_ ')' ':' scalar_type ';' compound_statment . END ID  (22)

	END  shift 163
	.  error


state 156
	exprcs : ',' expr . exprcs  (54)
	exprcs : .  (55)

	','  shift 141
	')'  reduce 55

	exprcs  goto 164


state 157
	exprbs_ : '[' expr ']' exprbs_ .  (50)

	.  reduce 50


state 158
	neg_int : neg pos_int .  (93)

	.  reduce 93


state 159
	forloop : FOR ID ASSIGN int_const TO . int_const DO statements_ END DO  (88)

	INT  shift 145
	OCTINT  shift 146
	'-'  shift 28
	.  error

	neg  goto 147
	int_const  goto 165
	pos_int  goto 149
	neg_int  goto 150


state 160
	condition : IF expr THEN statements_ ELSE . statements_ END IF  (85)
	statements_ : .  (39)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	BGN  shift 19
	FALSE  shift 31
	FOR  shift 59
	IF  shift 60
	PRINT  shift 61
	READ  shift 62
	TRUE  shift 35
	RETURN  shift 63
	WHILE  shift 64
	END  reduce 39

	compound_statment  goto 65
	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	statements_  goto 166
	statement  goto 68
	expr  goto 69
	var_ref  goto 70
	condition  goto 71
	whileloop  goto 72
	forloop  goto 73
	rtrn  goto 74
	items  goto 75
	item  goto 76
	procedure  goto 77


state 161
	condition : IF expr THEN statements_ END . IF  (86)

	IF  shift 167
	.  error


state 162
	whileloop : WHILE expr DO statements_ END . DO  (87)

	DO  shift 168
	.  error


state 163
	function : ID '(' formal_args_ ')' ':' scalar_type ';' compound_statment END . ID  (22)

	ID  shift 169
	.  error


state 164
	exprcs : ',' expr exprcs .  (54)

	.  reduce 54


state 165
	forloop : FOR ID ASSIGN int_const TO int_const . DO statements_ END DO  (88)

	DO  shift 170
	.  error


state 166
	condition : IF expr THEN statements_ ELSE statements_ . END IF  (85)

	END  shift 171
	.  error


state 167
	condition : IF expr THEN statements_ END IF .  (86)

	.  reduce 86


state 168
	whileloop : WHILE expr DO statements_ END DO .  (87)

	.  reduce 87


state 169
	function : ID '(' formal_args_ ')' ':' scalar_type ';' compound_statment END ID .  (22)

	.  reduce 22


state 170
	forloop : FOR ID ASSIGN int_const TO int_const DO . statements_ END DO  (88)
	statements_ : .  (39)

	ID  shift 57
	INT  shift 23
	OCTINT  shift 24
	FLOAT  shift 25
	SCI  shift 26
	STR  shift 27
	'('  shift 58
	'-'  shift 28
	BGN  shift 19
	FALSE  shift 31
	FOR  shift 59
	IF  shift 60
	PRINT  shift 61
	READ  shift 62
	TRUE  shift 35
	RETURN  shift 63
	WHILE  shift 64
	END  reduce 39

	compound_statment  goto 65
	literal_constant  goto 66
	constant  goto 39
	pos_constant  goto 40
	neg_constant  goto 41
	neg  goto 42
	statements_  goto 172
	statement  goto 68
	expr  goto 69
	var_ref  goto 70
	condition  goto 71
	whileloop  goto 72
	forloop  goto 73
	rtrn  goto 74
	items  goto 75
	item  goto 76
	procedure  goto 77


state 171
	condition : IF expr THEN statements_ ELSE statements_ END . IF  (85)

	IF  shift 173
	.  error


state 172
	forloop : FOR ID ASSIGN int_const TO int_const DO statements_ . END DO  (88)

	END  shift 174
	.  error


state 173
	condition : IF expr THEN statements_ ELSE statements_ END IF .  (85)

	.  reduce 85


state 174
	forloop : FOR ID ASSIGN int_const TO int_const DO statements_ END . DO  (88)

	DO  shift 175
	.  error


state 175
	forloop : FOR ID ASSIGN int_const TO int_const DO statements_ END DO .  (88)

	.  reduce 88


State 137 contains 14 shift/reduce conflicts.


53 terminals, 46 nonterminals
96 grammar rules, 176 states
